name: Run performance benchmark tests

on:
  workflow_run:
    workflows: ["Build docker images"]
    types:
      - completed
  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Only run if:
    # 1. Manual trigger, OR
    # 2. Build workflow completed successfully after a tag push
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'success' && 
       github.event.workflow_run.event == 'push')
    defaults:
      run:
        working-directory: example
    steps:
      - name: Checkout monorepo
        uses: actions/checkout@v4
        with:
          # For workflow_run, we need to checkout the specific commit that triggered the build
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
          fetch-depth: 2
      - name: Check if benchmark has already run
        run: |
          version=$(grep -E "^version=" ../gradle.properties | cut -d= -f2)
          if [ ! -f benchmark/results/benchmark_results_${version}.txt ]; then
              echo "No benchmark results for version: $version, starting to run benchmarks"
          else
              echo "Benchmarks already run!"
              exit 1
          fi
      - name: Wait for Docker image to be available
        run: |
          version=$(grep -E "^version=" ../gradle.properties | cut -d= -f2)
          echo "Waiting for Docker image datacatering/data-caterer:${version} to be available..."
          max_attempts=10
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            if docker pull datacatering/data-caterer:${version} 2>/dev/null; then
              echo "Docker image is available!"
              break
            else
              echo "Attempt $attempt/$max_attempts: Image not yet available, waiting 30 seconds..."
              sleep 30
              ((attempt++))
            fi
          done
          
          if [ $attempt -gt $max_attempts ]; then
            echo "ERROR: Docker image not available after $max_attempts attempts"
            exit 1
          fi
      - name: Checkout datafusion-comet repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          repository: apache/datafusion-comet
          path: example/benchmark/build/datafusion-comet
      - name: Get Spark query engine jars
        run: bash benchmark/setup_query_engine_jars.sh
      - name: Run benchmark script
        run: |
          version=$(grep -E "^version=" ../gradle.properties | cut -d= -f2)
          bash benchmark/run_benchmark.sh
          bash benchmark/compare_benchmark_results.sh "$version"
      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          title: Add benchmark results
